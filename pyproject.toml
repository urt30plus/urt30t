[project]
name = "urt30t"
version = "1.0.0"
description = "|30+| Urban Terror Game/Discord Bot"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "aiosqlite>=0.20.0",
    "discord.py[speed]>=2.4.0",
    "pydantic>=2.10.5",
    "pydantic-settings>=2.7.1",
    "python-dotenv>=1.0.1",
    "SQLAlchemy[asyncio]>=2.0.37",
    "tzdata>=2024.2; sys_platform == 'win32'",
    "urt30arcon>=1.2.3",
    "uvloop>=0.21.0; sys_platform == 'linux'",
]

[dependency-groups]
dev = [
    "alembic>=1.14.1",
    "mypy>=1.14.1",
    "pytest>=8.3.4",
    "types-aiofiles>=24.1.0",
    "watchfiles>=1.0.4",
]

[tool.mypy]
python_version = "3.13"
packages = ["urt30t"]
strict = true
warn_unreachable = true

[tool.ruff]
target-version = "py313"
extend-exclude = [".*", "alembic", "etc", "temp"]

[tool.ruff.format]
preview = true

[tool.ruff.lint]
select = [
    "A",  # shadowing builtins
    "ARG",  # unused arguments
    "ASYNC",  # async checks
    "B",  # bugbear
    "C4",  # comprehensions
    "DTZ",  # checks for naive datetimes
    "E",  # pycodestyle (errors)
    "ERA",  # eradicate (commented out code)
    "F",  # Pyflakes
    "FBT",  # boolean trap
    "FURB",  # refurb
    "I",   # isort
    "ISC",  # Implicit String Concat
    "LOG",  # logging checks
    "N",  # pep8-naming
    "PIE",  # misc lints
    "PL",  # Pylint
    "PT",  # Pytest
    "PTH",  # favor pahtlib.Path
    "RET",  # returns
    "RUF",  # Ruff-specific rules
    "S",  # bandit
    "SIM",  # simplify
    "T20",  # print statements
    "TC",  # type checking
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # pycodestyle (warnings)
]
ignore = ["ISC001"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "PLR2004",  # magic value used in comparison
    "S101",  # use of assert
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.field_validator"]
